openapi: 3.0.1
info:
  title: Crowdproj models
  description: 'This spec contains a [Crowdproj](http://crowdpwoj.com) project models and api description.'
  # termsOfService: http://swagger.io/terms/
  contact:
    email: sokatov@gmail.com
  license:
    name: Proprietar
    # url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1
# externalDocs:
#   description: Find out more about Swagger
#   url: http://swagger.io
servers:
  - url: https://crowdproj.com/v1
  - url: http://localhost:8080
tags:
  - name: profiles
    description: Description of the user profiles
paths:
  /profile:
    post:
      tags:
        - profile
      summary: Create profile
      description: This can only be done by the logged in profile.
      operationId: createProfile
      requestBody:
        description: Created profile object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RestProfile'
        required: true
      responses:
        default:
          description: successful operation
          content: {}
      x-codegen-request-body-name: body
  /profile/createWithArray:
    post:
      tags:
        - profile
      summary: Creates list of profiles with given input array
      operationId: createProfilesWithArrayInput
      requestBody:
        description: List of profile object
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RestProfile'
        required: true
      responses:
        default:
          description: successful operation
          content: {}
      x-codegen-request-body-name: body
  /profile/createWithList:
    post:
      tags:
        - profile
      summary: Creates list of profiles with given input array
      operationId: createProfilesWithListInput
      requestBody:
        description: List of profile object
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RestProfile'
        required: true
      responses:
        default:
          description: successful operation
          content: {}
      x-codegen-request-body-name: body
  /profile/login:
    get:
      tags:
        - profile
      summary: Logs profile into the system
      operationId: loginProfile
      parameters:
        - name: profilename
          in: query
          description: The profile name for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the profile
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        400:
          description: Invalid profilename/password supplied
          content: {}
  /profile/logout:
    get:
      tags:
        - profile
      summary: Logs out current logged in profile session
      operationId: logoutProfile
      responses:
        default:
          description: successful operation
          content: {}
  /profile/{username}:
    get:
      tags:
        - profile
      summary: Get profile by user name
      operationId: getProfileByName
      parameters:
        - name: username
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestProfile'
        400:
          description: Invalid username supplied
          content: {}
        404:
          description: Profile not found
          content: {}
    put:
      tags:
        - profile
      summary: Updated profile
      description: This can only be done by the logged in profile.
      operationId: updateProfile
      parameters:
        - name: username
          in: path
          description: name that need to be updated
          required: true
          schema:
            type: string
      requestBody:
        description: Updated user object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RestProfile'
        required: true
      responses:
        400:
          description: Invalid profile supplied
          content: {}
        404:
          description: Profile not found
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
        - profile
      summary: Delete profile
      description: This can only be done by the logged in profile.
      operationId: deleteProfile
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid username supplied
          content: {}
        404:
          description: Profile not found
          content: {}
components:
  schemas:

    RestQuery:
      $ref: '../spec/crowdproj-spec.yaml#/components/schemas/RestQuery'
    RestResponse:
      $ref: '../spec/crowdproj-spec.yaml#/components/schemas/RestResponse'
    RestError:
      $ref: '../spec/crowdproj-spec.yaml#/components/schemas/RestError'

    RestProfile:
      type: object
      properties:
        id:
          type: string
        alias:
          type: string
        fName:
          type: string
        lName:
          type: string
        mName:
          type: string
        email:
          type: string
        phone:
          type: string
        profileStatus:
          $ref: '#/components/schemas/RestProfileStatus'
      xml:
        name: Profile

    RestProfileStatus:
      type: string
      description: Profile Status
      enum:
        - profileClosed
        - profileActive
        - profileDeleted

    RestQueryProfileFind:
      allOf:
        - $ref: '#/components/schemas/RestQuery'
        - type: object
          properties:
            tagIds:
              type: array
              items:
                type: string

    RestQueryProfileSave:
      allOf:
        - $ref: '#/components/schemas/RestQuery'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/RestProfile'

    RestResponseProfile:
      allOf:
        - $ref: '#/components/schemas/RestResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/RestProfile'


  securitySchemes:
    crowdproj_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://teamstore.swagger.io/oauth/dialog
          scopes:
            write:teams: modify teams in your account
            read:teams: read your teams
        authorizationCode:
          authorizationUrl: https://example.com/oauth/authorize
          tokenUrl: https://example.com/oauth/token
          scopes:
            read: Grants read access
            write: Grants write access
            admin: Grants access to admin operations
    api_key:
      type: apiKey
      name: api_key
      in: header
